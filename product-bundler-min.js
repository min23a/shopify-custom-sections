let formData = { items: [] }, variant = !1; const itemCache = new Map(), increment = e => { const t = e.target.parentNode.querySelector("[name='qty']"); t.value = parseInt(t.value) + 1, qtyUpdate(t) }, decrement = e => { const t = e.target.parentNode.querySelector("[name='qty']"); t.value > 1 && (t.value = parseInt(t.value) - 1, qtyUpdate(t)) }, variantSelector = e => { const t = e.target.id.replace("ps-", "").trim(), n = document.getElementById(`qty-${t}`), o = formData.items.find(({ id: e }) => e === t); o ? o.id = e.target.value : formDataUpdate(e.target.value, n.value), variant = !0 }, setValue = e => { const t = e.target.value, n = document.getElementById(`qty-${t}`); e.target.checked ? variant ? findItem(t, n.value) : formDataUpdate(t, n.value) : removeItem(t) }, qtyUpdate = e => { const t = e.id.replace("qty-", "").trim(), n = formData.items.find(({ id: e }) => e === t); if (n) n.quantity = e.value; else { const t = document.getElementById(`ps-${t}`); t && findVariant(t.children, e.value) } }, findVariant = (e, t) => { const n = Array.from(e).find(e => formData.items.some(({ id: t }) => t === e.value)); if (n) { const e = formData.items.find(({ id: e }) => e === n.value); e.quantity = t } else console.log("Not added to cart") }, findItem = (e, t) => { formData.items.find(({ id: t }) => t === e) || formDataUpdate(e, t) }, removeItem = e => { formData.items = formData.items.filter(({ id: t }) => t !== e) }, formDataUpdate = (e, t = 1) => { formData.items.push({ id: e, quantity: t }) }, getSection = async () => { try { const [e, t] = await Promise.all([fetch("/?section_id=cart-drawer").then(e => e.text()), fetch("/?section_id=cart-icon-bubble").then(e => e.text())]); return { t: e, t2: t } } catch (e) { return console.error("Error fetching sections:", e), { t: "", t2: "" } } }, bundleAddToCart = async e => { e.preventDefault(); const t = document.querySelector(".bundle_cta"); t.children.add_cart.classList.add("hidden"), t.children.spinner.classList.remove("hidden"); try { if (formData.items.length >= 2) { const e = await fetch(window.Shopify.routes.root + "cart/add.js", { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify(formData) }), n = await e.json(), o = document.querySelector("cart-drawer"); if (!o) return void console.error("Cart drawer element not found"); const r = await getSection(), c = await fetch(window.Shopify.routes.root + "cart.js").then(e => e.json()); c.items = n.items, c.sections = { "cart-drawer": r.t, "cart-icon-bubble": r.t2 }; const a = new DOMParser, l = a.parseFromString(r.t, "text/html").querySelector("cart-drawer").innerHTML; o.innerHTML = l, o.classList.remove("is-empty"), o.renderContents(c) } else alert("Please Select Atleast 2 Products") } catch (e) { console.error("Error adding product to cart:", e) } t.children.add_cart.classList.remove("hidden"), t.children.spinner.classList.add("hidden") };
